{"ast":null,"code":"import axios from \"axios\";\nimport { VENDOR_CREATE_REVIEW_FAIL, VENDOR_CREATE_REVIEW_REQUEST, VENDOR_CREATE_REVIEW_SUCCESS, VENDOR_DETAILS_FAIL, VENDOR_DETAILS_REQUEST, VENDOR_DETAILS_SUCCESS, VENDOR_LIST_FAIL, VENDOR_LIST_REQUEST, VENDOR_LIST_SUCCESS } from \"../Constants/VendorConstants\";\nimport { logout } from \"./userActions\"; // VENDOR LIST\n\nexport const listVendor = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let pageNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return async dispatch => {\n    try {\n      dispatch({\n        type: VENDOR_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`/api/vendors?keyword=${keyword}&pageNumber=${pageNumber}`);\n      dispatch({\n        type: VENDOR_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: VENDOR_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n}; // SINGLE VENDOR\n\nexport const listVendorDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: VENDOR_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/vendors/${id}`);\n    dispatch({\n      type: VENDOR_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: VENDOR_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // VENDOR REVIEW CREATE\n\nexport const createVendorReview = (vendorId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: VENDOR_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/vendors/${vendorId}/review`, review, config);\n    dispatch({\n      type: VENDOR_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: VENDOR_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Dynamite/Documents/GitHub/MERN-managementvenue/client/src/Redux/Actions/VendorActions.js"],"names":["axios","VENDOR_CREATE_REVIEW_FAIL","VENDOR_CREATE_REVIEW_REQUEST","VENDOR_CREATE_REVIEW_SUCCESS","VENDOR_DETAILS_FAIL","VENDOR_DETAILS_REQUEST","VENDOR_DETAILS_SUCCESS","VENDOR_LIST_FAIL","VENDOR_LIST_REQUEST","VENDOR_LIST_SUCCESS","logout","listVendor","keyword","pageNumber","dispatch","type","data","get","payload","error","response","message","listVendorDetails","id","createVendorReview","vendorId","review","getState","userLogin","userInfo","config","headers","Authorization","token","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  VENDOR_CREATE_REVIEW_FAIL,\r\n  VENDOR_CREATE_REVIEW_REQUEST,\r\n  VENDOR_CREATE_REVIEW_SUCCESS,\r\n  VENDOR_DETAILS_FAIL,\r\n  VENDOR_DETAILS_REQUEST,\r\n  VENDOR_DETAILS_SUCCESS,\r\n  VENDOR_LIST_FAIL,\r\n  VENDOR_LIST_REQUEST,\r\n  VENDOR_LIST_SUCCESS,\r\n} from \"../Constants/VendorConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\n// VENDOR LIST\r\nexport const listVendor =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: VENDOR_LIST_REQUEST });\r\n      const { data } = await axios.get(\r\n        `/api/vendors?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n      dispatch({ type: VENDOR_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: VENDOR_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// SINGLE VENDOR\r\nexport const listVendorDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: VENDOR_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/vendors/${id}`);\r\n    dispatch({ type: VENDOR_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VENDOR_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// VENDOR REVIEW CREATE\r\nexport const createVendorReview =\r\n  (vendorId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: VENDOR_CREATE_REVIEW_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/vendors/${vendorId}/review`, review, config);\r\n      dispatch({ type: VENDOR_CREATE_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: VENDOR_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}